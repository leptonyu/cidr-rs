name: Rust

on:
  push:
    branches: ["main"]
    tags:
      - v*
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.profile.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        profile:
          - os: ubuntu-latest
            channel: stable
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            channel: stable
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - name: Install musl-tools
        if: matrix.profile.os == 'ubuntu-latest'
        run: sudo apt-get install -y musl-tools
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.profile.channel }}
          override: true
          target: ${{ matrix.profile.target }}
          components: rustfmt, clippy
      - name: Run clippy
        run: |
          cargo clippy --target ${{ matrix.profile.target }} -- -D warnings
      - name: Run tests
        run: |
          cargo test --target ${{ matrix.profile.target }} --verbose
      - name: Build
        if: ${{startsWith(github.ref, 'refs/tags/v')}}
        run: |
          cargo build --target ${{ matrix.profile.target }} --verbose --release
      - name: Pack
        if: ${{startsWith(github.ref, 'refs/tags/v')}}
        run: cd target/${{ matrix.profile.target }}/release && tar -cJf ../../cidr.${{ matrix.profile.target }}.tar.xz cidr
      - name: Upload a Build Artifact
        if: ${{startsWith(github.ref, 'refs/tags/v')}}
        uses: softprops/action-gh-release@v1
        with:
          files: target/cidr.${{ matrix.profile.target }}.tar.xz
